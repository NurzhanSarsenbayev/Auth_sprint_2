version: "3.9"

services:
  test_postgres:
    image: postgres:16
    container_name: auth_postgres_test
    env_file:
      - .env.test
    environment:
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
      POSTGRES_DB: ${TEST_DB_NAME}
    ports:
      - "5433:5432"   # наружу открываем 5433, чтобы не конфликтовать с dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TEST_DB_USER} -d ${TEST_DB_NAME}"]
      interval: 5s
      retries: 5
    volumes:
      - test_pg_data:/var/lib/postgresql/data

  test_redis:
    image: redis:7
    container_name: auth_redis_test
    env_file:
      - .env.test
    ports:
      - "6380:6379"   # наружу открываем 6380
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
    volumes:
      - test_redis_data:/data

  tests:
    build:
      context: ..
      dockerfile: tests/Dockerfile.test
    container_name: auth_tests
    depends_on:
      test_postgres:
        condition: service_healthy
      test_redis:
        condition: service_started
    env_file:
      - .env.test
    entrypoint: ["sh", "/app/tests/entrypoint.test.sh"]

volumes:
  test_pg_data:
  test_redis_data:
