version: "3.9"
name: content_standalone

services:
  api:
    build: fastapi_practice
    ports:
      - "8000:8000"
    volumes:
      - ./fastapi_practice/src:/app/src
    env_file:
      - .env
    depends_on:
      - redis
      - elasticsearch
    networks:
      - fastapi_net

  redis:
    image: redis:7.2
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - fastapi_net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - fastapi_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.13.2
#    container_name: fastapi_kibana
#    environment:
#      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#    networks:
#      - fastapi_net

#  etl:
#    build:
#      context: ./fastapi_practice
#    command: python etl/run_etl.py
#    volumes:
#      - ./etl:/app/etl
#      - ./data:/app/data
#    depends_on:
#      - elasticsearch
#    networks:
#      - fastapi_net

volumes:
  es_data:
  redis_data:

networks:
  fastapi_net:
